{"version":3,"file":"MainOverride.js","sources":["../src/pfx_override/js/MainOverride.js"],"sourcesContent":["import '../css/MainOverrideStyle.css';\r\nimport '../css/FuroStyleOverride.css';\r\n\r\nimport MystEditor, { defaultButtons } from '../../MystEditor.jsx';\r\nconst openFolders = new Set(JSON.parse(localStorage.getItem('openFolders') || '[]'));\r\nconst bulletproof = [\"_static\", \"_templates\"];\r\nlet currentPath = '';\r\nlet activeFolderPath = '';\r\nlet mystEditorInstance = null;\r\nconst sidebar = document.getElementById('sidebar');\r\nconst resizer = document.getElementById('resizer');\r\nconst editorPanel = document.getElementById('editor-panel');\r\n// Restore sidebar width\r\nconst savedWidth = localStorage.getItem('sidebarWidth');\r\nif (savedWidth) {\r\n  sidebar.style.width = savedWidth + 'px';\r\n}\r\n\r\n// Resize logic\r\nresizer.onmousedown = function (e) {\r\n  e.preventDefault();\r\n  const startX = e.clientX;\r\n  const startWidth = sidebar.offsetWidth;\r\n  document.onmousemove = function (e) {\r\n    const newWidth = startWidth + (e.clientX - startX);\r\n    if (newWidth >= 250 && newWidth <= 600) {\r\n      sidebar.style.width = newWidth + 'px';\r\n      localStorage.setItem('sidebarWidth', newWidth);\r\n    }\r\n  };\r\n  document.onmouseup = function () {\r\n    document.onmousemove = null;\r\n    document.onmouseup = null;\r\n  };\r\n};\r\n\r\n\r\nfunction normalizePath(path) {\r\n  return path.replace(/\\\\/g, '/');\r\n}\r\n\r\nfunction fetchTree() {\r\n  fetch('/api/tree')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      renderTree(data, document.getElementById('tree'));\r\n      // After rendering tree, restore selected file\r\n      let currentPath = localStorage.getItem('currentPath');\r\n      if (currentPath) {\r\n        // Instead of always trying to load, check if currentPath exists in tree\r\n        if (fileExistsInTree(currentPath, data)) {\r\n          fetch(`/api/file?path=${encodeURIComponent(currentPath)}`)\r\n            .then(res => {\r\n              if (!res.ok) throw new Error('File missing');\r\n              return res.json();\r\n            })\r\n            .then(() => loadFile(normalizePath(currentPath)))\r\n            .catch(() => {\r\n              console.warn(\"Last opened file not found.\");\r\n              localStorage.removeItem('currentPath');\r\n            });\r\n        } else {\r\n          // File no longer exists, clear stored path\r\n          localStorage.removeItem('currentPath');\r\n          localStorage.removeItem('lastOpened');\r\n        }\r\n      }\r\n    });\r\n}\r\n\r\nfunction fileExistsInTree(path, nodes) {\r\n  for (const node of nodes) {\r\n    if (node.path === path && node.type === 'file') return true;\r\n    if (node.type === 'folder' && node.children) {\r\n      if (fileExistsInTree(path, node.children)) return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction clearActiveStates() {\r\n  document.querySelectorAll('.file, .folder').forEach(el => {\r\n    el.classList.remove('active');\r\n  });\r\n}\r\n\r\nfunction renderTree(nodes, parent) {\r\n  parent.innerHTML = '';\r\n  const ul = document.createElement('ul');\r\n  for (const node of nodes) {\r\n    const li = document.createElement('li');\r\n    const title = document.createElement('span');     \r\n    //title.textContent = node.name;\r\n    title.textContent = node.name.endsWith('.md') ? node.name.replace(/\\.md$/, '') : node.name;\r\n    title.title = node.path;\r\n    title.className = node.type;\r\n    if (node.type === 'folder') {\r\n      if (node.name.startsWith('.') || node.name.startsWith('_')) {\r\n        continue;\r\n      }\r\n      const icon = document.createElement('span');\r\n      icon.textContent = '📁'; // closed folder icon\r\n      icon.style.marginRight = '6px';\r\n      title.prepend(icon);\r\n    } else if (node.type === 'file') {\r\n      const icon = document.createElement('span');\r\n      icon.textContent = '📄'; // file icon\r\n      icon.style.marginRight = '6px';\r\n      title.prepend(icon);\r\n    }\r\n    title.onclick = e => {\r\n      e.stopPropagation();\r\n      clearActiveStates();\r\n      title.classList.add('active');\r\n      const icon = title.querySelector('span');\r\n      if (node.type === 'file') {\r\n        loadFile(normalizePath(node.path));\r\n      } else {\r\n        activeFolderPath = node.path;\r\n        const subtreeContainer = li.querySelector('.subtree');\r\n        const isOpen = subtreeContainer.hasChildNodes();\r\n        if (isOpen) {\r\n          subtreeContainer.innerHTML = '';\r\n          if (icon) icon.textContent = '📁';\r\n          openFolders.delete(node.path);\r\n          localStorage.setItem('openFolders', JSON.stringify([...openFolders]));\r\n        } else if (node.children) {\r\n          renderTree(node.children, subtreeContainer);\r\n          if (icon) icon.textContent = '📂';\r\n          openFolders.add(node.path);\r\n          localStorage.setItem('openFolders', JSON.stringify([...openFolders]));\r\n        }\r\n      }\r\n    };\r\n\r\n    const subtreeContainer = document.createElement('div');\r\n    subtreeContainer.className = 'subtree';\r\n    li.appendChild(title);\r\n    li.appendChild(subtreeContainer);\r\n    ul.appendChild(li);\r\n    // Restore open state\r\n    if (node.type === 'folder' && openFolders.has(node.path)) {\r\n      renderTree(node.children || [], subtreeContainer);\r\n      const icon = title.querySelector('span');\r\n      if (icon) icon.textContent = '📂';\r\n    }\r\n  }\r\n  parent.appendChild(ul);\r\n  // Clicking empty space in tree clears selection\r\n  parent.addEventListener('click', (e) => {\r\n    if (!e.target.closest('span.file') && !e.target.closest('span.folder')) {\r\n      clearActiveStates();\r\n      activeFolderPath = '';\r\n    }\r\n  });\r\n}\r\n\r\nasync function loadFile(filename) {\r\n  const res = await fetch(`/api/file?path=${encodeURIComponent(normalizePath(filename))}`);\r\n  if (res.status === 404) {\r\n    console.warn('Last opened file not found.');\r\n    localStorage.removeItem('lastOpened');\r\n    return;\r\n  }\r\n\r\n  if (!res.ok) {\r\n    alert(`File loading error: ${res.statusText}`);\r\n    return;\r\n  }\r\n\r\n  const data = await res.json();\r\n  const old = document.getElementById(\"myst\");\r\n  const newContainer = document.createElement(\"div\");\r\n  newContainer.id = \"myst\";\r\n  newContainer.style.flexGrow = \"1\";\r\n  newContainer.style.border = \"1px solid #ccc\";\r\n  newContainer.style.marginBottom = \"0.5rem\";\r\n  newContainer.style.height = \"80vh\";\r\n  old.replaceWith(newContainer);\r\n  currentPath = filename;\r\n  localStorage.setItem('currentPath', currentPath);\r\n\r\n  // Create a CSS stylesheet and add style to remove padding\r\n  const sheet = new CSSStyleSheet();\r\n  const css = await (await fetch('../FuroStyleOverride.css')).text();\r\n  await sheet.replace(css);\r\n  document.adoptedStyleSheets = [...document.adoptedStyleSheets, sheet];\r\n\r\n\r\n  // Only show the file name in title\r\n  const title = filename.split('\\\\').pop().split('/').pop();\r\n  const urlParams = new URLSearchParams(window.location.search);\r\n  const usercolors = [\"#30bced\", \"#60c771\", \"#e6aa3a\", \"#cbb63e\", \"#ee6352\", \"#9ac2c9\", \"#8acb88\", \"#14b2c4\"];\r\n  const env = import.meta?.env ?? {};\r\n  const collabEnabled = !(env.VITE_COLLAB === \"OFF\") && urlParams.get(\"collab\") !== \"false\";\r\n  const collabUrl = env.VITE_WS_URL ?? urlParams.get(\"collab_server\");\r\n  const room = urlParams.get(\"room\") || \"0\";\r\n  const username = urlParams.get(\"username\") || Math.floor(Math.random() * 1000).toString();\r\n  const color = usercolors[Math.floor(Math.random() * usercolors.length)];\r\n\r\n\r\n  requestAnimationFrame(() => {\r\n    mystEditorInstance = MystEditor({\r\n      templatelist: \"linkedtemplatelist.json\",\r\n      initialText: data.content,\r\n      title: title,\r\n      additionalStyles: sheet,\r\n      collaboration: {\r\n        enabled: true,\r\n        commentsEnabled: true,\r\n        resolvingCommentsEnabled: true,\r\n        wsUrl: collabUrl ?? \"#\",\r\n        username,\r\n        room,\r\n        color,\r\n        mode: collabUrl ? \"websocket\" : \"local\",\r\n      },\r\n\r\n      includeButtons: defaultButtons.concat([\r\n        {\r\n          text: \"Excalidraw\",\r\n          action: () => {\r\n            copyExcalidrawSceneToClipboardFromMystSelection();\r\n          }\r\n        }, \r\n        {\r\n          text: \"💾 Save\",\r\n          action: () => {\r\n            const content = mystEditorInstance.editorView.v.contentDOM.editContext.text;\r\n            fetch(`/api/file?path=${encodeURIComponent(currentPath)}`, {\r\n              method: 'POST',\r\n              headers: { 'Content-Type': 'application/json' },\r\n              body: JSON.stringify({ content }),\r\n            }).then(() => alert('Saved'));\r\n          },\r\n        },\r\n        {\r\n          text: \"🗃️ Image\",\r\n          action: () => {\r\n            openImagePicker();\r\n          }\r\n        }, \r\n        {\r\n          text: \"Clear\", \r\n          action: () => {\r\n            clearLineSymbols();\r\n          }\r\n        }, \r\n        {\r\n          text: \"H1\", \r\n          action: () => {\r\n            convertToH1();\r\n          }\r\n        }, \r\n        {\r\n          text: \"H2\", \r\n          action: () => {\r\n            convertToH2();\r\n          }\r\n        }, \r\n        {\r\n          text: \"B\", \r\n          action: () => {\r\n            convertToBold();\r\n          }\r\n        }\r\n      ]),\r\n      spellcheckOpts: { dict: \"en_US\", dictionaryPath: `${window.location.pathname}dictionaries` },\r\n      syncScroll: true,\r\n    }, newContainer);\r\n\r\n    window._mystEditor = mystEditorInstance;\r\n  });\r\n\r\n  localStorage.setItem('lastOpened', filename);\r\n}\r\n\r\n// ------------------------- Typography buttons functions START -------------------------- //\r\n\r\nconst trimSymbols = ['*', '#', '_'];\r\n\r\nfunction clearLineSymbols() {\r\n  const view = mystEditorInstance?.editorView;\r\n  if (!view) {\r\n    alert(\"Editor is not ready yet.\");\r\n    return;\r\n  }\r\n\r\n  const state = view.v.state;\r\n  const { from: start, to: end } = state.selection.main;\r\n  const fullText = state.doc.toString();\r\n\r\n  // Get the full line\r\n  const lineStart = fullText.lastIndexOf('\\n', start - 1) + 1;\r\n  const lineEnd = fullText.indexOf('\\n', end);\r\n  const actualEnd = lineEnd === -1 ? fullText.length : lineEnd;\r\n\r\n  const line = fullText.slice(lineStart, actualEnd);\r\n\r\n  // Remove all leading/trailing symbols and spaces\r\n  const symbolPattern = `[#*_\\\\s]*`; // greedy match of symbols and whitespace\r\n  const regex = new RegExp(`^${symbolPattern}(.*?)${symbolPattern}$`);\r\n  const match = line.match(regex);\r\n  const cleaned = match ? match[1] : line;\r\n\r\n  view.v.dispatch({\r\n    changes: { from: lineStart, to: actualEnd, insert: cleaned },\r\n    selection: { anchor: lineStart + cleaned.length }\r\n  });\r\n\r\n  view.v.focus();\r\n}\r\n\r\n// Helper to insert H1/H2 style\r\nfunction _convertLinePrefix(prefix) {\r\n  const view = mystEditorInstance?.editorView;\r\n  if (!view) {\r\n    alert(\"Editor is not ready yet.\");\r\n    return;\r\n  }\r\n\r\n  const state = view.v.state;\r\n  const { from: start, to: end } = state.selection.main;\r\n  const fullText = state.doc.toString();\r\n\r\n  // Get the full line\r\n  const lineStart = fullText.lastIndexOf('\\n', start - 1) + 1;\r\n  const lineEnd = fullText.indexOf('\\n', end);\r\n  const actualEnd = lineEnd === -1 ? fullText.length : lineEnd;\r\n\r\n  const line = fullText.slice(lineStart, actualEnd);\r\n  const cleaned = line.replace(/^[#*_ \\t]+|[#*_ \\t]+$/g, '');\r\n  const newLine = prefix + cleaned;\r\n\r\n  view.v.dispatch({\r\n    changes: { from: lineStart, to: actualEnd, insert: newLine },\r\n    selection: { anchor: lineStart + newLine.length }\r\n  });\r\n\r\n  view.v.focus();\r\n}\r\n\r\nfunction convertToH1() {\r\n  clearLineSymbols();\r\n  _convertLinePrefix('# ');\r\n}\r\n\r\nfunction convertToH2() {\r\n  clearLineSymbols();\r\n  _convertLinePrefix('## ');\r\n}\r\n\r\nfunction convertToBold() {\r\n  const view = mystEditorInstance?.editorView;\r\n  if (!view) {\r\n    alert(\"Editor is not ready yet.\");\r\n    return;\r\n  }\r\n\r\n  const state = view.v.state;\r\n  const { from: start, to: end } = state.selection.main;\r\n  // Skip if no selection\r\n  if (start === end) {\r\n    alert(\"Please select text to bold.\");\r\n    return;\r\n  }\r\n  const fullText = state.doc.toString();\r\n\r\n  const selectedText = fullText.slice(start, end);\r\n  const bolded = `**${selectedText}**`;\r\n\r\n  view.v.dispatch({\r\n    changes: { from: start, to: end, insert: bolded },\r\n    selection: { anchor: start + bolded.length }\r\n  });\r\n\r\n  view.v.focus();\r\n}\r\n\r\n\r\n// ------------------------- Typography buttons functions END -------------------------- //\r\n\r\n\r\n// New Image Picker modal code\r\nlet imagePickerModal = null;\r\nlet folderList = null;\r\nlet imageList = null;\r\nlet currentFolder = '';\r\n\r\nasync function copyExcalidrawSceneToClipboardFromMystSelection() {\r\n  const view = mystEditorInstance?.editorView;\r\n  if (!view) {\r\n    alert(\"Editor is not ready yet.\");\r\n    return;\r\n  }\r\n\r\n  const state = view.v.state;\r\n  const { from: start, to: end } = state.selection.main;\r\n  const selectedText = state.doc.sliceString(start, end);\r\n\r\n  const imgMatch = selectedText.match(/<img[^>]*src=\"([^\"]+)\"[^>]*>|!\\[[^\\]]*\\]\\(([^)]+)\\)/);\r\n  const imgSrc = imgMatch?.[1] || imgMatch?.[2];\r\n\r\n  if (!imgSrc) {\r\n    alert(\"No image selected.\");\r\n    return;\r\n  }\r\n\r\n  const response = await fetch(imgSrc);\r\n  const imageBlob = await response.blob();\r\n\r\n  const base64 = await new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => resolve(reader.result.split(',')[1]);\r\n    reader.onerror = reject;\r\n    reader.readAsDataURL(imageBlob);\r\n  });\r\n\r\n  const fileId = crypto.randomUUID();\r\n  const now = Date.now();\r\n\r\n  // Prepare Excalidraw elements\r\n  const elements = [\r\n    {\r\n      id: crypto.randomUUID(),\r\n      type: \"image\",\r\n      x: 100,\r\n      y: 100,\r\n      width: 400,\r\n      height: 300,\r\n      angle: 0,\r\n      fileId,\r\n      status: \"saved\",\r\n      seed: Math.floor(Math.random() * 100000),\r\n      version: 1,\r\n      versionNonce: Math.floor(Math.random() * 100000000),\r\n      isDeleted: false,\r\n      updated: now,\r\n      scale: [1, 1],\r\n    },\r\n  ];\r\n\r\n  // Prepare appState\r\n  const appState = {\r\n    backgroundColor: \"#ffffff\",\r\n  };\r\n\r\n  // Prepare files\r\n  const files = {\r\n    [fileId]: {\r\n      mimeType: imageBlob.type,\r\n      id: fileId,\r\n      dataURL: `data:${imageBlob.type};base64,${base64}`,\r\n      created: now,\r\n    },\r\n  };\r\n\r\n  // Create the full scene data\r\n  const sceneData = {\r\n    type: \"excalidraw\",\r\n    version: 2,\r\n    source: \"myst\",\r\n    elements,\r\n    appState,\r\n    files\r\n  };\r\n\r\n  // Serialize using Excalidraw's recommended method\r\n  const serialized = serializeAsJSON(elements, appState);\r\n\r\n  // Create the final clipboard data\r\n  const clipboardData = {\r\n    ...JSON.parse(serialized),\r\n    files  // Include files separately\r\n  };\r\n\r\n  await navigator.clipboard.writeText(JSON.stringify(clipboardData));\r\n  alert(\"Copied image to clipboard as Excalidraw scene!\");\r\n}\r\n\r\n// Implement the required serialization function\r\nfunction serializeAsJSON(elements, appState) {\r\n  return JSON.stringify({\r\n    type: \"excalidraw\",\r\n    version: 2,\r\n    source: \"myst\",\r\n    elements,\r\n    appState\r\n  });\r\n}\r\n\r\nfunction openImagePicker() {\r\n  // Create modal if it doesn't exist\r\n  if (!imagePickerModal) {\r\n    imagePickerModal = document.createElement('div');\r\n    imagePickerModal.id = 'image-picker-modal';\r\n    imagePickerModal.style = `\r\n      position: fixed;\r\n      top: 10%; left: 10%;\r\n      width: 80%; height: 80%;\r\n      background: #fff;\r\n      border: 1px solid #ccc;\r\n      box-shadow: 0 0 10px rgba(0,0,0,0.3);\r\n      z-index: 9999;\r\n      display: flex;\r\n      flex-direction: row;\r\n      user-select: none;\r\n    `;\r\n\r\n    imagePickerModal.innerHTML = `\r\n      <div id=\"image-picker-folder-list\" style=\"width: 30%; overflow-y: auto; border-right: 1px solid #ccc; padding: 10px; box-sizing: border-box;\"></div>\r\n      <div id=\"image-picker-image-list\" style=\"flex-grow: 1; overflow-y: auto; padding: 10px; box-sizing: border-box; display: flex; flex-wrap: wrap; gap: 10px;\"></div>\r\n      <button id=\"image-picker-close\" style=\"width: 28px; padding: 0; margin: 0; position: absolute; top: 8px; right: 12px; font-size: 20px; cursor: pointer; background: transparent; border: none;\">✖</button>\r\n    `;\r\n\r\n    document.body.appendChild(imagePickerModal);\r\n\r\n    folderList = document.getElementById('image-picker-folder-list');\r\n    imageList = document.getElementById('image-picker-image-list');\r\n    const closeBtn = document.getElementById('image-picker-close');\r\n\r\n    closeBtn.onclick = () => {\r\n      imagePickerModal.style.display = 'none';\r\n    };\r\n  }\r\n\r\n  // Show the modal\r\n  imagePickerModal.style.display = 'flex';\r\n\r\n  // Reset to root folder and load images\r\n  currentFolder = '';\r\n  loadImagePickerFolder('');\r\n}\r\n\r\n// Insert image markdown into editor\r\nfunction insertImageMarkdown(path) {\r\n  // const imgSyntax = `![image](/source/${path})`;\r\n  const imgSyntax = path.startsWith('_static') \r\n? `![image](/_static/${path.split('/').slice(1).join('/')})`\r\n: `![image](${path.split('/').pop()})`;  // For local images next to .md file\r\n  const view = mystEditorInstance?.editorView;\r\n  if (!view) {\r\n    alert(\"Editor is not ready yet.\");\r\n    return;\r\n  }\r\n  const state = view.v;\r\n  const start = view.v.contentDOM.editContext.selectionStart;\r\n  const end = view.v.contentDOM.editContext.selectionEnd;\r\n  view.v.dispatch({\r\n    changes: { from: start, to: end, insert: imgSyntax },\r\n    selection: { anchor: start + imgSyntax.length }\r\n  });\r\n\r\n  view.v.focus();\r\n}\r\n\r\n\r\n// Render folders and images in the modal\r\nfunction renderFoldersAndImages(items) {\r\n  if (!folderList || !imageList) return;\r\n  folderList.innerHTML = '';\r\n  imageList.innerHTML = '';\r\n  // Render folders\r\n  items.filter(i => i.type === 'folder').forEach(folderItem => {\r\n    const el = document.createElement('div');\r\n    el.textContent = '📁 ' + folderItem.name;\r\n    el.style.cursor = 'pointer';\r\n    el.style.padding = '4px';\r\n    el.style.userSelect = 'none';\r\n    el.onclick = () => {\r\n      currentFolder = folderItem.path;\r\n      loadImagePickerFolder(folderItem.path);\r\n    };\r\n    folderList.appendChild(el);\r\n  });\r\n\r\n\r\n  // Render images as thumbnails\r\n  items.filter(i => i.type === 'file').forEach(fileItem => {\r\n    const img = document.createElement('img');\r\n    img.src = `/source/${fileItem.path}`;\r\n    img.style.width = '100px';\r\n    img.style.height = 'fit-content';\r\n    img.style.cursor = 'pointer';\r\n    img.title = fileItem.name;\r\n    img.alt = fileItem.name;\r\n    img.onclick = () => {\r\n      insertImageMarkdown(fileItem.path);\r\n      imagePickerModal.style.display = 'none';\r\n    };\r\n    imageList.appendChild(img);\r\n  });\r\n\r\n\r\n  // Add \"up one folder\" button if not root\r\n  if (currentFolder) {\r\n    const upFolder = currentFolder.split('/').slice(0, -1).join('/');\r\n    const upEl = document.createElement('div');\r\n    upEl.textContent = '⬆️ .. (up one folder)';\r\n    upEl.style.cursor = 'pointer';\r\n    upEl.style.padding = '4px';\r\n    upEl.style.userSelect = 'none';\r\n    upEl.style.fontWeight = 'bold';\r\n    upEl.onclick = () => {\r\n      currentFolder = upFolder;\r\n      loadImagePickerFolder(upFolder);\r\n    };\r\n    folderList.prepend(upEl);\r\n  }\r\n}\r\n\r\n\r\n// Load folder content from server and render\r\nasync function loadImagePickerFolder(folder) {\r\n  try {\r\n    const res = await fetch(`/api/images_in_folder?folder=${encodeURIComponent(folder)}`);\r\n    if (!res.ok) {\r\n      alert('Failed to load list of images/folders');\r\n      return;\r\n    }\r\n    const items = await res.json();\r\n    renderFoldersAndImages(items);\r\n  } catch (err) {\r\n    alert('Error: ' + err.message);\r\n  }\r\n}\r\n\r\n\r\n// ----------------- 'MOVE TO' SECTION START ---------------- // \r\n// Functions for 'Move to' feature, we can move folders and files in the tree structure. \r\n// TODO: Make tracing of that file tree changes so we can change all links (maybe button), in all file references\r\n\r\n\r\nfunction openMoveToDialog(itemPath) {\r\n  const modal = document.createElement(\"div\");\r\n  modal.style = `\r\n    position: fixed;\r\n    top: 20%; left: 30%;\r\n    width: 40%; height: 50%;\r\n    background: white;\r\n    border: 1px solid #ccc;\r\n    box-shadow: 0 0 10px rgba(0,0,0,0.3);\r\n    z-index: 10000;\r\n    padding: 1rem;\r\n    overflow-y: auto;\r\n  `;\r\n\r\n  modal.innerHTML = `<h3>Select folder to move to</h3>\r\n    <div id=\"move-tree\" style=\"display: block; width:100%; height: 80%;\"></div>\r\n    <div style=\"text-align: right; margin-top: 10px;\">\r\n      <button id=\"move-cancel\">❌ Cancel</button>\r\n      <button id=\"move-ok\">✅ OK</button>\r\n    </div>`;\r\n\r\n  document.body.appendChild(modal);\r\n  let selectedMovePath = \"\";\r\n  fetch(\"/api/tree\").then(res => res.json()).then(data => {\r\n    const container = document.getElementById(\"move-tree\");\r\n    const rootNode = {\r\n      type: \"folder\",\r\n      name: \"root\",\r\n      path: \"\",\r\n      children: data\r\n    };\r\n    renderMoveTree([rootNode], container);\r\n  });\r\n\r\n\r\n  function renderMoveTree(nodes, parent) {\r\n    const ul = document.createElement(\"ul\");\r\n    for (const node of nodes) {\r\n      if (node.type !== \"folder\") continue;\r\n      const li = document.createElement(\"li\");\r\n      const btn = document.createElement(\"div\");\r\n      btn.textContent = \"📁 \" + node.name;\r\n      btn.style.cursor = \"pointer\";\r\n      btn.onclick = () => {\r\n        selectedMovePath = node.path.replace(/\\\\/g, \"/\");\r\n        document.querySelectorAll(\"#move-tree div\").forEach(el => el.style.fontWeight = \"normal\");\r\n        btn.style.fontWeight = \"bold\";\r\n      };\r\n      li.appendChild(btn);\r\n      if (node.children) {\r\n        renderMoveTree(node.children, li);\r\n      }\r\n      ul.appendChild(li);\r\n    }\r\n    parent.appendChild(ul);\r\n  }\r\n\r\n\r\n  document.getElementById(\"move-ok\").onclick = async () => {\r\n    if (selectedMovePath === null) {\r\n      alert(\"Select a file or folder to move.\");\r\n      return;\r\n    }\r\n    const name = itemPath.replace(/\\\\/g, \"/\").split(\"/\").pop();  // get filename/folder only\r\n    const newPath = selectedMovePath ? `${selectedMovePath}/${name}` : name;\r\n    const res = await fetch(\"/api/rename\", {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ oldPath: itemPath, newPath }),\r\n    });\r\n    if (!res.ok) {\r\n      alert(\"Error while moving.\");\r\n    } else {\r\n      if (currentPath === itemPath) {\r\n        currentPath = newPath;\r\n        localStorage.setItem(\"currentPath\", newPath);\r\n      }\r\n      fetchTree();\r\n    }\r\n    modal.remove();\r\n  };\r\n\r\n  document.getElementById(\"move-cancel\").onclick = () => {\r\n    modal.remove();\r\n  };\r\n}\r\n\r\n\r\ndocument.getElementById(\"move\").onclick = () => {\r\n  const selectedEl = document.querySelector(\".file.active, .folder.active\");\r\n  if (!selectedEl) {\r\n    alert(\"Select a file or folder to move.\");\r\n    return;\r\n  }\r\n  const path = selectedEl.title;\r\n  const name = path.split('/').pop();\r\n  if (bulletproof.includes(name)) {\r\n    alert(`Cannot move protected folder: ${name}`);\r\n    return;\r\n  }\r\n  openMoveToDialog(path);\r\n};\r\n\r\n\r\n// ------------- 'MOVE TO' SECTION END --------------- //\r\n\r\n  // Create new file\r\n  document.getElementById(\"new-file\").onclick = async () => {\r\n    const name = prompt('Enter new file name (without \".md\")');\r\n    if (!name || name.trim() === '') return;\r\n    const fullName = name.endsWith('.md') ? name : `${name}.md`;\r\n    const path = activeFolderPath ? `${activeFolderPath}/${fullName}` : fullName;\r\n    fetch('/api/create', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ path, type: 'file' }),\r\n    }).then(() => {\r\n      fetchTree();\r\n      setTimeout(() => loadFile(normalizePath(path)), 500); // Open the new file\r\n    });\r\n  };\r\n\r\n\r\n  // Create new folder\r\n  document.getElementById(\"new-folder\").onclick = async () => {\r\n    const name = prompt('Enter new folder name (e.g.: newfolder)');\r\n    if (!name) return;\r\n    // If no folder selected, create in root\r\n    const path = activeFolderPath ? `${activeFolderPath}/${name}` : name;\r\n    fetch('/api/create', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ path, type: 'folder' }),\r\n    }).then(() => fetchTree());\r\n  };\r\n\r\n\r\n  document.getElementById(\"delete\").onclick = async () => {\r\n    const selectedEl = document.querySelector(\".file.active, .folder.active\");\r\n    if (!selectedEl) {\r\n      alert(\"Select a file or folder to delete.\");\r\n      return;\r\n    }\r\n    const path = selectedEl.title;\r\n    const name = path.split('/').pop();\r\n    if (bulletproof.includes(name)) {\r\n      alert(`Cannot delete protected folder: ${name}`);\r\n      return;\r\n    }\r\n    const isFolder = selectedEl.classList.contains(\"folder\");\r\n    const confirmText = isFolder\r\n      ? `Are you sure you want to delete the folder \"${path}\" and all its contents?`\r\n      : `Are you sure you want to delete the file \"${path}\"?`;\r\n    if (!confirm(confirmText)) return;\r\n    try {\r\n      const res = await fetch('/api/delete', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ path }),\r\n      });\r\n      if (!res.ok) {\r\n        const error = await res.text();\r\n        alert(`Error while deleting: ${error}`);\r\n        return;\r\n      }\r\n      // Clear active state and reload tree\r\n      clearActiveStates();\r\n      let currentPath = localStorage.getItem('currentPath');\r\n      // If the currently opened file is inside the deleted folder or is the deleted file itself, clear the editor and localStorage\r\n      if (currentPath) {\r\n        if (isFolder && currentPath.startsWith(path + '/')) {\r\n          localStorage.removeItem('currentPath');\r\n          localStorage.removeItem('lastOpened');\r\n          currentPath = '';\r\n          const editor = document.getElementById(\"myst\");\r\n          if (editor) editor.innerHTML = \"\";\r\n        } else if (!isFolder && currentPath === path) {\r\n          localStorage.removeItem('currentPath');\r\n          localStorage.removeItem('lastOpened');\r\n          currentPath = '';\r\n          const editor = document.getElementById(\"myst\");\r\n          if (editor) editor.innerHTML = \"\";\r\n        }\r\n      }\r\n      fetchTree();\r\n    } catch (err) {\r\n      alert(`Error while deleting: ${err.message}`);\r\n    }\r\n  };\r\n\r\n\r\ndocument.getElementById(\"rename\").onclick = async () => {\r\n  const selectedEl = document.querySelector(\".file.active, .folder.active\");\r\n  if (!selectedEl) {\r\n    alert(\"Select a file or folder to rename.\");\r\n    return;\r\n  }\r\n  const path = selectedEl.title;\r\n  const name = path.split('/').pop();\r\n  if (bulletproof.includes(name)) {\r\n    alert(`Cannot rename protected folder: ${name}`);\r\n    return;\r\n  }\r\n  const oldPath = path.replace(/\\\\/g, \"/\");\r\n  const segments = oldPath.split(\"/\");\r\n  const oldName = segments.pop();\r\n  const dirPath = segments.join(\"/\");\r\n\r\n  // Show name without .md extension to user\r\n  const displayName = oldName.endsWith(\".md\") ? oldName.replace(/\\.md$/, \"\") : oldName;\r\n  const inputName = prompt(\"Enter new name:\", displayName);\r\n  if (!inputName || inputName.trim() === \"\" || inputName === displayName) return;\r\n  const newName = oldName.endsWith(\".md\") && !inputName.endsWith(\".md\")\r\n    ? `${inputName}.md` : inputName;\r\n  const newPath = dirPath ? `${dirPath}/${newName}` : newName;\r\n  const res = await fetch(\"/api/rename\", {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify({ oldPath, newPath }),\r\n  });\r\n  if (!res.ok) {\r\n    alert(\"Rename error.\");\r\n    return;\r\n  }\r\n  if (currentPath === oldPath) {\r\n    currentPath = newPath;\r\n    localStorage.setItem(\"currentPath\", newPath);\r\n  }\r\n  fetchTree();\r\n};\r\n\r\n  // Load tree and default file on start\r\n  fetchTree();\r\n"],"names":["openFolders","Set","JSON","parse","localStorage","getItem","bulletproof","currentPath","activeFolderPath","mystEditorInstance","sidebar","document","getElementById","resizer","savedWidth","style","width","onmousedown","e","preventDefault","startX","clientX","startWidth","offsetWidth","onmousemove","newWidth","setItem","onmouseup","normalizePath","path","replace","fetchTree","fetch","then","res","json","data","renderTree","fileExistsInTree","encodeURIComponent","ok","Error","loadFile","catch","console","warn","removeItem","nodes","node","type","children","clearActiveStates","querySelectorAll","forEach","el","classList","remove","parent","innerHTML","ul","createElement","li","title","textContent","name","endsWith","className","startsWith","icon","marginRight","prepend","onclick","stopPropagation","add","querySelector","subtreeContainer","hasChildNodes","delete","stringify","appendChild","has","addEventListener","target","closest","filename","status","alert","statusText","old","newContainer","id","flexGrow","border","marginBottom","height","replaceWith","sheet","CSSStyleSheet","css","text","adoptedStyleSheets","split","pop","urlParams","URLSearchParams","window","location","search","usercolors","env","import","VITE_COLLAB","get","collabUrl","VITE_WS_URL","room","username","Math","floor","random","toString","color","length","requestAnimationFrame","MystEditor","templatelist","initialText","content","additionalStyles","collaboration","enabled","commentsEnabled","resolvingCommentsEnabled","wsUrl","mode","includeButtons","defaultButtons","concat","action","copyExcalidrawSceneToClipboardFromMystSelection","editorView","v","contentDOM","editContext","method","headers","body","openImagePicker","clearLineSymbols","convertToH1","convertToH2","convertToBold","spellcheckOpts","dict","dictionaryPath","pathname","syncScroll","_mystEditor","view","state","from","start","to","end","selection","main","fullText","doc","lineStart","lastIndexOf","lineEnd","indexOf","actualEnd","line","slice","symbolPattern","regex","RegExp","match","cleaned","dispatch","changes","insert","anchor","focus","_convertLinePrefix","prefix","newLine","bolded","imagePickerModal","folderList","imageList","currentFolder","imgMatch","sliceString","imgSrc","imageBlob","blob","base64","Promise","resolve","reject","reader","FileReader","onloadend","result","onerror","readAsDataURL","fileId","crypto","randomUUID","now","Date","elements","x","y","angle","seed","version","versionNonce","isDeleted","updated","scale","appState","backgroundColor","files","mimeType","dataURL","created","serialized","serializeAsJSON","clipboardData","navigator","clipboard","writeText","source","closeBtn","display","loadImagePickerFolder","insertImageMarkdown","imgSyntax","join","selectionStart","selectionEnd","renderFoldersAndImages","items","filter","i","folderItem","cursor","padding","userSelect","fileItem","img","src","alt","upFolder","upEl","fontWeight","folder","err","message","openMoveToDialog","itemPath","modal","selectedMovePath","container","renderMoveTree","btn","newPath","oldPath","selectedEl","includes","prompt","trim","fullName","setTimeout","isFolder","contains","confirmText","confirm","error","editor","segments","oldName","dirPath","displayName","inputName","newName"],"mappings":";;;AAIA,MAAMA,IAAc,IAAIC,IAAIC,KAAKC,MAAMC,aAAaC,QAAQ,aAAa,KAAK,IAAI,CAAC,GAC7EC,IAAc,CAAC,WAAW,YAAY;AAC5C,IAAIC,IAAc,IACdC,IAAmB,IACnBC,IAAqB;AACzB,MAAMC,IAAUC,SAASC,eAAe,SAAS,GAC3CC,IAAUF,SAASC,eAAe,SAAS;AAC7BD,SAASC,eAAe,cAAc;AAE1D,MAAME,IAAaV,aAAaC,QAAQ,cAAc;AAClDS,MACFJ,EAAQK,MAAMC,QAAQF,IAAa;AAIrCD,EAAQI,cAAc,SAAUC,GAAG;AACjCA,EAAAA,EAAEC,eAAc;AAChB,QAAMC,IAASF,EAAEG,SACXC,IAAaZ,EAAQa;AAC3BZ,WAASa,cAAc,SAAUN,GAAG;AAClC,UAAMO,IAAWH,KAAcJ,EAAEG,UAAUD;AAC3C,IAAIK,KAAY,OAAOA,KAAY,QACjCf,EAAQK,MAAMC,QAAQS,IAAW,MACjCrB,aAAasB,QAAQ,gBAAgBD,CAAQ;AAAA,EAEjD,GACAd,SAASgB,YAAY,WAAY;AAC/BhB,aAASa,cAAc,MACvBb,SAASgB,YAAY;AAAA,EACvB;AACF;AAGA,SAASC,EAAcC,GAAM;AAC3B,SAAOA,EAAKC,QAAQ,OAAO,GAAG;AAChC;AAEA,SAASC,IAAY;AACnBC,QAAM,WAAW,EACdC,KAAKC,CAAAA,MAAOA,EAAIC,KAAI,CAAE,EACtBF,KAAKG,CAAAA,MAAQ;AACZC,IAAAA,EAAWD,GAAMzB,SAASC,eAAe,MAAM,CAAC;AAEhD,QAAIL,IAAcH,aAAaC,QAAQ,aAAa;AACpD,IAAIE,MAEE+B,EAAiB/B,GAAa6B,CAAI,IACpCJ,MAAM,kBAAkBO,mBAAmBhC,CAAW,CAAC,EAAE,EACtD0B,KAAKC,CAAAA,MAAO;AACX,UAAI,CAACA,EAAIM,GAAI,OAAM,IAAIC,MAAM,cAAc;AAC3C,aAAOP,EAAIC,KAAI;AAAA,IACjB,CAAC,EACAF,KAAK,MAAMS,EAASd,EAAcrB,CAAW,CAAC,CAAC,EAC/CoC,MAAM,MAAM;AACXC,cAAQC,KAAK,6BAA6B,GAC1CzC,aAAa0C,WAAW,aAAa;AAAA,IACvC,CAAC,KAGH1C,aAAa0C,WAAW,aAAa,GACrC1C,aAAa0C,WAAW,YAAY;AAAA,EAG1C,CAAC;AACL;AAEA,SAASR,EAAiBT,GAAMkB,GAAO;AACrC,aAAWC,KAAQD;AAEjB,QADIC,EAAKnB,SAASA,KAAQmB,EAAKC,SAAS,UACpCD,EAAKC,SAAS,YAAYD,EAAKE,YAC7BZ,EAAiBT,GAAMmB,EAAKE,QAAQ;AAAG,aAAO;AAGtD,SAAO;AACT;AAEA,SAASC,IAAoB;AAC3BxC,WAASyC,iBAAiB,gBAAgB,EAAEC,QAAQC,CAAAA,MAAM;AACxDA,IAAAA,EAAGC,UAAUC,OAAO,QAAQ;AAAA,EAC9B,CAAC;AACH;AAEA,SAASnB,EAAWU,GAAOU,GAAQ;AACjCA,EAAAA,EAAOC,YAAY;AACnB,QAAMC,IAAKhD,SAASiD,cAAc,IAAI;AACtC,aAAWZ,KAAQD,GAAO;AACxB,UAAMc,IAAKlD,SAASiD,cAAc,IAAI,GAChCE,IAAQnD,SAASiD,cAAc,MAAM;AAK3C,QAHAE,EAAMC,cAAcf,EAAKgB,KAAKC,SAAS,KAAK,IAAIjB,EAAKgB,KAAKlC,QAAQ,SAAS,EAAE,IAAIkB,EAAKgB,MACtFF,EAAMA,QAAQd,EAAKnB,MACnBiC,EAAMI,YAAYlB,EAAKC,MACnBD,EAAKC,SAAS,UAAU;AAC1B,UAAID,EAAKgB,KAAKG,WAAW,GAAG,KAAKnB,EAAKgB,KAAKG,WAAW,GAAG;AACvD;AAEF,YAAMC,IAAOzD,SAASiD,cAAc,MAAM;AAC1CQ,MAAAA,EAAKL,cAAc,MACnBK,EAAKrD,MAAMsD,cAAc,OACzBP,EAAMQ,QAAQF,CAAI;AAAA,IACpB,WAAWpB,EAAKC,SAAS,QAAQ;AAC/B,YAAMmB,IAAOzD,SAASiD,cAAc,MAAM;AAC1CQ,MAAAA,EAAKL,cAAc,MACnBK,EAAKrD,MAAMsD,cAAc,OACzBP,EAAMQ,QAAQF,CAAI;AAAA,IACpB;AACAN,IAAAA,EAAMS,UAAUrD,CAAAA,MAAK;AACnBA,MAAAA,EAAEsD,gBAAe,GACjBrB,EAAiB,GACjBW,EAAMP,UAAUkB,IAAI,QAAQ;AAC5B,YAAML,IAAON,EAAMY,cAAc,MAAM;AACvC,UAAI1B,EAAKC,SAAS;AAChBP,QAAAA,EAASd,EAAcoB,EAAKnB,IAAI,CAAC;AAAA,WAC5B;AACLrB,QAAAA,IAAmBwC,EAAKnB;AACxB,cAAM8C,IAAmBd,EAAGa,cAAc,UAAU;AAEpD,QADeC,EAAiBC,cAAa,KAE3CD,EAAiBjB,YAAY,IACzBU,MAAMA,EAAKL,cAAc,OAC7B/D,EAAY6E,OAAO7B,EAAKnB,IAAI,GAC5BzB,aAAasB,QAAQ,eAAexB,KAAK4E,UAAU,CAAC,GAAG9E,CAAW,CAAC,CAAC,KAC3DgD,EAAKE,aACdb,EAAWW,EAAKE,UAAUyB,CAAgB,GACtCP,MAAMA,EAAKL,cAAc,OAC7B/D,EAAYyE,IAAIzB,EAAKnB,IAAI,GACzBzB,aAAasB,QAAQ,eAAexB,KAAK4E,UAAU,CAAC,GAAG9E,CAAW,CAAC,CAAC;AAAA,MAExE;AAAA,IACF;AAEA,UAAM2E,IAAmBhE,SAASiD,cAAc,KAAK;AAMrD,QALAe,EAAiBT,YAAY,WAC7BL,EAAGkB,YAAYjB,CAAK,GACpBD,EAAGkB,YAAYJ,CAAgB,GAC/BhB,EAAGoB,YAAYlB,CAAE,GAEbb,EAAKC,SAAS,YAAYjD,EAAYgF,IAAIhC,EAAKnB,IAAI,GAAG;AACxDQ,MAAAA,EAAWW,EAAKE,YAAY,CAAA,GAAIyB,CAAgB;AAChD,YAAMP,IAAON,EAAMY,cAAc,MAAM;AACvC,MAAIN,MAAMA,EAAKL,cAAc;AAAA,IAC/B;AAAA,EACF;AACAN,EAAAA,EAAOsB,YAAYpB,CAAE,GAErBF,EAAOwB,iBAAiB,SAAU/D,CAAAA,MAAM;AACtC,IAAI,CAACA,EAAEgE,OAAOC,QAAQ,WAAW,KAAK,CAACjE,EAAEgE,OAAOC,QAAQ,aAAa,MACnEhC,EAAiB,GACjB3C,IAAmB;AAAA,EAEvB,CAAC;AACH;AAEA,eAAekC,EAAS0C,GAAU;;AAChC,QAAMlD,IAAM,MAAMF,MAAM,kBAAkBO,mBAAmBX,EAAcwD,CAAQ,CAAC,CAAC,EAAE;AACvF,MAAIlD,EAAImD,WAAW,KAAK;AACtBzC,YAAQC,KAAK,6BAA6B,GAC1CzC,aAAa0C,WAAW,YAAY;AACpC;AAAA,EACF;AAEA,MAAI,CAACZ,EAAIM,IAAI;AACX8C,UAAM,uBAAuBpD,EAAIqD,UAAU,EAAE;AAC7C;AAAA,EACF;AAEA,QAAMnD,IAAO,MAAMF,EAAIC,KAAI,GACrBqD,IAAM7E,SAASC,eAAe,MAAM,GACpC6E,IAAe9E,SAASiD,cAAc,KAAK;AACjD6B,EAAAA,EAAaC,KAAK,QAClBD,EAAa1E,MAAM4E,WAAW,KAC9BF,EAAa1E,MAAM6E,SAAS,kBAC5BH,EAAa1E,MAAM8E,eAAe,UAClCJ,EAAa1E,MAAM+E,SAAS,QAC5BN,EAAIO,YAAYN,CAAY,GAC5BlF,IAAc6E,GACdhF,aAAasB,QAAQ,eAAenB,CAAW;AAG/C,QAAMyF,IAAQ,IAAIC,cAAa,GACzBC,IAAM,OAAO,MAAMlE,MAAM,0BAA0B,GAAGmE,KAAI;AAChE,QAAMH,EAAMlE,QAAQoE,CAAG,GACvBvF,SAASyF,qBAAqB,CAAC,GAAGzF,SAASyF,oBAAoBJ,CAAK;AAIpE,QAAMlC,IAAQsB,EAASiB,MAAM,IAAI,EAAEC,IAAG,EAAGD,MAAM,GAAG,EAAEC,IAAG,GACjDC,IAAY,IAAIC,gBAAgBC,OAAOC,SAASC,MAAM,GACtDC,IAAa,CAAC,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,SAAS,GACpGC,MAAMC,IAAAA,gCAAAA,EAAaD,QAAO,CAAA;AACV,EAAEA,EAAIE,gBAAgB,SAAUR,EAAUS,IAAI,QAAQ;AAC5E,QAAMC,IAAYJ,EAAIK,eAAeX,EAAUS,IAAI,eAAe,GAC5DG,IAAOZ,EAAUS,IAAI,MAAM,KAAK,KAChCI,IAAWb,EAAUS,IAAI,UAAU,KAAKK,KAAKC,MAAMD,KAAKE,OAAM,IAAK,GAAI,EAAEC,SAAQ,GACjFC,IAAQb,EAAWS,KAAKC,MAAMD,KAAKE,OAAM,IAAKX,EAAWc,MAAM,CAAC;AAGtEC,wBAAsB,MAAM;AAC1BlH,IAAAA,IAAqBmH,EAAW;AAAA,MAC9BC,cAAc;AAAA,MACdC,aAAa1F,EAAK2F;AAAAA,MAClBjE,OAAOA;AAAAA,MACPkE,kBAAkBhC;AAAAA,MAClBiC,eAAe;AAAA,QACbC,SAAS;AAAA,QACTC,iBAAiB;AAAA,QACjBC,0BAA0B;AAAA,QAC1BC,OAAOpB,KAAa;AAAA,QACpBG,UAAAA;AAAAA,QACAD,MAAAA;AAAAA,QACAM,OAAAA;AAAAA,QACAa,MAAMrB,IAAY,cAAc;AAAA;MAGlCsB,gBAAgBC,EAAeC,OAAO,CACpC;AAAA,QACEtC,MAAM;AAAA,QACNuC,QAAQA,MAAM;AACZC,UAAAA,EAA+C;AAAA,QACjD;AAAA,MACF,GACA;AAAA,QACExC,MAAM;AAAA,QACNuC,QAAQA,MAAM;AACZ,gBAAMX,IAAUtH,EAAmBmI,WAAWC,EAAEC,WAAWC,YAAY5C;AACvEnE,gBAAM,kBAAkBO,mBAAmBhC,CAAW,CAAC,IAAI;AAAA,YACzDyI,QAAQ;AAAA,YACRC,SAAS;AAAA,cAAE,gBAAgB;AAAA;YAC3BC,MAAMhJ,KAAK4E,UAAU;AAAA,cAAEiD,SAAAA;AAAAA,aAAS;AAAA,WACjC,EAAE9F,KAAK,MAAMqD,MAAM,OAAO,CAAC;AAAA,QAC9B;AAAA,MACF,GACA;AAAA,QACEa,MAAM;AAAA,QACNuC,QAAQA,MAAM;AACZS,UAAAA,EAAe;AAAA,QACjB;AAAA,MACF,GACA;AAAA,QACEhD,MAAM;AAAA,QACNuC,QAAQA,MAAM;AACZU,UAAAA,EAAgB;AAAA,QAClB;AAAA,MACF,GACA;AAAA,QACEjD,MAAM;AAAA,QACNuC,QAAQA,MAAM;AACZW,UAAAA,EAAW;AAAA,QACb;AAAA,MACF,GACA;AAAA,QACElD,MAAM;AAAA,QACNuC,QAAQA,MAAM;AACZY,UAAAA,EAAW;AAAA,QACb;AAAA,MACF,GACA;AAAA,QACEnD,MAAM;AAAA,QACNuC,QAAQA,MAAM;AACZa,UAAAA,EAAa;AAAA,QACf;AAAA,MACF,CAAC,CACF;AAAA,MACDC,gBAAgB;AAAA,QAAEC,MAAM;AAAA,QAASC,gBAAgB,GAAGjD,OAAOC,SAASiD,QAAQ;AAAA;MAC5EC,YAAY;AAAA,OACXnE,CAAY,GAEfgB,OAAOoD,cAAcpJ;AAAAA,EACvB,CAAC,GAEDL,aAAasB,QAAQ,cAAc0D,CAAQ;AAC7C;AAMA,SAASgE,IAAmB;AAC1B,QAAMU,IAAOrJ,KAAAA,gBAAAA,EAAoBmI;AACjC,MAAI,CAACkB,GAAM;AACTxE,UAAM,0BAA0B;AAChC;AAAA,EACF;AAEA,QAAMyE,IAAQD,EAAKjB,EAAEkB,OACf;AAAA,IAAEC,MAAMC;AAAAA,IAAOC,IAAIC;AAAAA,EAAI,IAAIJ,EAAMK,UAAUC,MAC3CC,IAAWP,EAAMQ,IAAI/C,SAAQ,GAG7BgD,IAAYF,EAASG,YAAY;AAAA,GAAMR,IAAQ,CAAC,IAAI,GACpDS,IAAUJ,EAASK,QAAQ;AAAA,GAAMR,CAAG,GACpCS,IAAYF,MAAY,KAAKJ,EAAS5C,SAASgD,GAE/CG,IAAOP,EAASQ,MAAMN,GAAWI,CAAS,GAG1CG,IAAgB,aAChBC,IAAQ,IAAIC,OAAO,IAAIF,CAAa,QAAQA,CAAa,GAAG,GAC5DG,IAAQL,EAAKK,MAAMF,CAAK,GACxBG,IAAUD,IAAQA,EAAM,CAAC,IAAIL;AAEnCf,EAAAA,EAAKjB,EAAEuC,SAAS;AAAA,IACdC,SAAS;AAAA,MAAErB,MAAMQ;AAAAA,MAAWN,IAAIU;AAAAA,MAAWU,QAAQH;AAAAA;IACnDf,WAAW;AAAA,MAAEmB,QAAQf,IAAYW,EAAQzD;AAAAA,IAAO;AAAA,EAClD,CAAC,GAEDoC,EAAKjB,EAAE2C,MAAK;AACd;AAGA,SAASC,EAAmBC,GAAQ;AAClC,QAAM5B,IAAOrJ,KAAAA,gBAAAA,EAAoBmI;AACjC,MAAI,CAACkB,GAAM;AACTxE,UAAM,0BAA0B;AAChC;AAAA,EACF;AAEA,QAAMyE,IAAQD,EAAKjB,EAAEkB,OACf;AAAA,IAAEC,MAAMC;AAAAA,IAAOC,IAAIC;AAAAA,EAAI,IAAIJ,EAAMK,UAAUC,MAC3CC,IAAWP,EAAMQ,IAAI/C,SAAQ,GAG7BgD,IAAYF,EAASG,YAAY;AAAA,GAAMR,IAAQ,CAAC,IAAI,GACpDS,IAAUJ,EAASK,QAAQ;AAAA,GAAMR,CAAG,GACpCS,IAAYF,MAAY,KAAKJ,EAAS5C,SAASgD,GAG/CS,IADOb,EAASQ,MAAMN,GAAWI,CAAS,EAC3B9I,QAAQ,0BAA0B,EAAE,GACnD6J,IAAUD,IAASP;AAEzBrB,EAAAA,EAAKjB,EAAEuC,SAAS;AAAA,IACdC,SAAS;AAAA,MAAErB,MAAMQ;AAAAA,MAAWN,IAAIU;AAAAA,MAAWU,QAAQK;AAAAA;IACnDvB,WAAW;AAAA,MAAEmB,QAAQf,IAAYmB,EAAQjE;AAAAA,IAAO;AAAA,EAClD,CAAC,GAEDoC,EAAKjB,EAAE2C,MAAK;AACd;AAEA,SAASnC,IAAc;AACrBD,EAAAA,EAAgB,GAChBqC,EAAmB,IAAI;AACzB;AAEA,SAASnC,IAAc;AACrBF,EAAAA,EAAgB,GAChBqC,EAAmB,KAAK;AAC1B;AAEA,SAASlC,IAAgB;AACvB,QAAMO,IAAOrJ,KAAAA,gBAAAA,EAAoBmI;AACjC,MAAI,CAACkB,GAAM;AACTxE,UAAM,0BAA0B;AAChC;AAAA,EACF;AAEA,QAAMyE,IAAQD,EAAKjB,EAAEkB,OACf;AAAA,IAAEC,MAAMC;AAAAA,IAAOC,IAAIC;AAAAA,EAAI,IAAIJ,EAAMK,UAAUC;AAEjD,MAAIJ,MAAUE,GAAK;AACjB7E,UAAM,6BAA6B;AACnC;AAAA,EACF;AAIA,QAAMsG,IAAS,KAHE7B,EAAMQ,IAAI/C,SAAQ,EAELsD,MAAMb,GAAOE,CAAG,CACd;AAEhCL,EAAAA,EAAKjB,EAAEuC,SAAS;AAAA,IACdC,SAAS;AAAA,MAAErB,MAAMC;AAAAA,MAAOC,IAAIC;AAAAA,MAAKmB,QAAQM;AAAAA;IACzCxB,WAAW;AAAA,MAAEmB,QAAQtB,IAAQ2B,EAAOlE;AAAAA,IAAO;AAAA,EAC7C,CAAC,GAEDoC,EAAKjB,EAAE2C,MAAK;AACd;AAOA,IAAIK,IAAmB,MACnBC,IAAa,MACbC,IAAY,MACZC,IAAgB;AAEpB,eAAerD,IAAkD;AAC/D,QAAMmB,IAAOrJ,KAAAA,gBAAAA,EAAoBmI;AACjC,MAAI,CAACkB,GAAM;AACTxE,UAAM,0BAA0B;AAChC;AAAA,EACF;AAEA,QAAMyE,IAAQD,EAAKjB,EAAEkB,OACf;AAAA,IAAEC,MAAMC;AAAAA,IAAOC,IAAIC;AAAAA,EAAI,IAAIJ,EAAMK,UAAUC,MAG3C4B,IAFelC,EAAMQ,IAAI2B,YAAYjC,GAAOE,CAAG,EAEvBe,MAAM,qDAAqD,GACnFiB,KAASF,KAAAA,gBAAAA,EAAW,QAAMA,KAAAA,gBAAAA,EAAW;AAE3C,MAAI,CAACE,GAAQ;AACX7G,UAAM,oBAAoB;AAC1B;AAAA,EACF;AAGA,QAAM8G,IAAY,OADD,MAAMpK,MAAMmK,CAAM,GACFE,KAAI,GAE/BC,IAAS,MAAM,IAAIC,QAAQ,CAACC,GAASC,MAAW;AACpD,UAAMC,IAAS,IAAIC,WAAU;AAC7BD,IAAAA,EAAOE,YAAY,MAAMJ,EAAQE,EAAOG,OAAOxG,MAAM,GAAG,EAAE,CAAC,CAAC,GAC5DqG,EAAOI,UAAUL,GACjBC,EAAOK,cAAcX,CAAS;AAAA,EAChC,CAAC,GAEKY,IAASC,OAAOC,WAAU,GAC1BC,IAAMC,KAAKD,IAAG,GAGdE,IAAW,CACf;AAAA,IACE3H,IAAIuH,OAAOC,WAAU;AAAA,IACrBjK,MAAM;AAAA,IACNqK,GAAG;AAAA,IACHC,GAAG;AAAA,IACHvM,OAAO;AAAA,IACP8E,QAAQ;AAAA,IACR0H,OAAO;AAAA,IACPR,QAAAA;AAAAA,IACA3H,QAAQ;AAAA,IACRoI,MAAMpG,KAAKC,MAAMD,KAAKE,OAAM,IAAK,GAAM;AAAA,IACvCmG,SAAS;AAAA,IACTC,cAActG,KAAKC,MAAMD,KAAKE,OAAM,IAAK,GAAS;AAAA,IAClDqG,WAAW;AAAA,IACXC,SAASV;AAAAA,IACTW,OAAO,CAAC,GAAG,CAAC;AAAA,EACd,CAAC,GAIGC,IAAW;AAAA,IACfC,iBAAiB;AAAA,KAIbC,IAAQ;AAAA,IACZ,CAACjB,CAAM,GAAG;AAAA,MACRkB,UAAU9B,EAAUnJ;AAAAA,MACpByC,IAAIsH;AAAAA,MACJmB,SAAS,QAAQ/B,EAAUnJ,IAAI,WAAWqJ,CAAM;AAAA,MAChD8B,SAASjB;AAAAA,IACX;AAAA,KAcIkB,IAAaC,EAAgBjB,GAAUU,CAAQ,GAG/CQ,IAAgB;AAAA,IACpB,GAAGrO,KAAKC,MAAMkO,CAAU;AAAA,IACxBJ,OAAAA;AAAAA;AAAAA;AAGF,QAAMO,UAAUC,UAAUC,UAAUxO,KAAK4E,UAAUyJ,CAAa,CAAC,GACjEjJ,MAAM,gDAAgD;AACxD;AAGA,SAASgJ,EAAgBjB,GAAUU,GAAU;AAC3C,SAAO7N,KAAK4E,UAAU;AAAA,IACpB7B,MAAM;AAAA,IACNyK,SAAS;AAAA,IACTiB,QAAQ;AAAA,IACRtB,UAAAA;AAAAA,IACAU,UAAAA;AAAAA,EACF,CAAC;AACH;AAEA,SAAS5E,IAAkB;AAEzB,MAAI,CAAC0C,GAAkB;AACrBA,IAAAA,IAAmBlL,SAASiD,cAAc,KAAK,GAC/CiI,EAAiBnG,KAAK,sBACtBmG,EAAiB9K,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAazB8K,EAAiBnI,YAAY;AAAA;AAAA;AAAA;AAAA,OAM7B/C,SAASuI,KAAKnE,YAAY8G,CAAgB,GAE1CC,IAAanL,SAASC,eAAe,0BAA0B,GAC/DmL,IAAYpL,SAASC,eAAe,yBAAyB;AAC7D,UAAMgO,IAAWjO,SAASC,eAAe,oBAAoB;AAE7DgO,IAAAA,EAASrK,UAAU,MAAM;AACvBsH,MAAAA,EAAiB9K,MAAM8N,UAAU;AAAA,IACnC;AAAA,EACF;AAGAhD,EAAAA,EAAiB9K,MAAM8N,UAAU,QAGjC7C,IAAgB,IAChB8C,EAAsB,EAAE;AAC1B;AAGA,SAASC,EAAoBlN,GAAM;AAEjC,QAAMmN,IAAYnN,EAAKsC,WAAW,SAAS,IAC3C,qBAAqBtC,EAAKwE,MAAM,GAAG,EAAEyE,MAAM,CAAC,EAAEmE,KAAK,GAAG,CAAC,MACvD,YAAYpN,EAAKwE,MAAM,GAAG,EAAEC,IAAG,CAAE,KAC3BwD,IAAOrJ,KAAAA,gBAAAA,EAAoBmI;AACjC,MAAI,CAACkB,GAAM;AACTxE,UAAM,0BAA0B;AAChC;AAAA,EACF;AACcwE,EAAAA,EAAKjB;AACnB,QAAMoB,IAAQH,EAAKjB,EAAEC,WAAWC,YAAYmG,gBACtC/E,IAAML,EAAKjB,EAAEC,WAAWC,YAAYoG;AAC1CrF,EAAAA,EAAKjB,EAAEuC,SAAS;AAAA,IACdC,SAAS;AAAA,MAAErB,MAAMC;AAAAA,MAAOC,IAAIC;AAAAA,MAAKmB,QAAQ0D;AAAAA;IACzC5E,WAAW;AAAA,MAAEmB,QAAQtB,IAAQ+E,EAAUtH;AAAAA,IAAO;AAAA,EAChD,CAAC,GAEDoC,EAAKjB,EAAE2C,MAAK;AACd;AAIA,SAAS4D,EAAuBC,GAAO;AACrC,MAAI,GAACvD,KAAc,CAACC,OACpBD,EAAWpI,YAAY,IACvBqI,EAAUrI,YAAY,IAEtB2L,EAAMC,OAAOC,CAAAA,MAAKA,EAAEtM,SAAS,QAAQ,EAAEI,QAAQmM,CAAAA,MAAc;AAC3D,UAAMlM,IAAK3C,SAASiD,cAAc,KAAK;AACvCN,IAAAA,EAAGS,cAAc,QAAQyL,EAAWxL,MACpCV,EAAGvC,MAAM0O,SAAS,WAClBnM,EAAGvC,MAAM2O,UAAU,OACnBpM,EAAGvC,MAAM4O,aAAa,QACtBrM,EAAGiB,UAAU,MAAM;AACjByH,MAAAA,IAAgBwD,EAAW3N,MAC3BiN,EAAsBU,EAAW3N,IAAI;AAAA,IACvC,GACAiK,EAAW/G,YAAYzB,CAAE;AAAA,EAC3B,CAAC,GAID+L,EAAMC,OAAOC,CAAAA,MAAKA,EAAEtM,SAAS,MAAM,EAAEI,QAAQuM,CAAAA,MAAY;AACvD,UAAMC,IAAMlP,SAASiD,cAAc,KAAK;AACxCiM,IAAAA,EAAIC,MAAM,WAAWF,EAAS/N,IAAI,IAClCgO,EAAI9O,MAAMC,QAAQ,SAClB6O,EAAI9O,MAAM+E,SAAS,eACnB+J,EAAI9O,MAAM0O,SAAS,WACnBI,EAAI/L,QAAQ8L,EAAS5L,MACrB6L,EAAIE,MAAMH,EAAS5L,MACnB6L,EAAItL,UAAU,MAAM;AAClBwK,MAAAA,EAAoBa,EAAS/N,IAAI,GACjCgK,EAAiB9K,MAAM8N,UAAU;AAAA,IACnC,GACA9C,EAAUhH,YAAY8K,CAAG;AAAA,EAC3B,CAAC,GAIG7D,IAAe;AACjB,UAAMgE,IAAWhE,EAAc3F,MAAM,GAAG,EAAEyE,MAAM,GAAG,EAAE,EAAEmE,KAAK,GAAG,GACzDgB,IAAOtP,SAASiD,cAAc,KAAK;AACzCqM,IAAAA,EAAKlM,cAAc,yBACnBkM,EAAKlP,MAAM0O,SAAS,WACpBQ,EAAKlP,MAAM2O,UAAU,OACrBO,EAAKlP,MAAM4O,aAAa,QACxBM,EAAKlP,MAAMmP,aAAa,QACxBD,EAAK1L,UAAU,MAAM;AACnByH,MAAAA,IAAgBgE,GAChBlB,EAAsBkB,CAAQ;AAAA,IAChC,GACAlE,EAAWxH,QAAQ2L,CAAI;AAAA,EACzB;AACF;AAIA,eAAenB,EAAsBqB,GAAQ;AAC3C,MAAI;AACF,UAAMjO,IAAM,MAAMF,MAAM,gCAAgCO,mBAAmB4N,CAAM,CAAC,EAAE;AACpF,QAAI,CAACjO,EAAIM,IAAI;AACX8C,YAAM,uCAAuC;AAC7C;AAAA,IACF;AACA,UAAM+J,IAAQ,MAAMnN,EAAIC,KAAI;AAC5BiN,IAAAA,EAAuBC,CAAK;AAAA,EAC9B,SAASe,GAAK;AACZ9K,UAAM,YAAY8K,EAAIC,OAAO;AAAA,EAC/B;AACF;AAQA,SAASC,EAAiBC,GAAU;AAClC,QAAMC,IAAQ7P,SAASiD,cAAc,KAAK;AAC1C4M,EAAAA,EAAMzP,QAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYdyP,EAAM9M,YAAY;AAAA;AAAA;AAAA;AAAA;AAAA,aAOlB/C,SAASuI,KAAKnE,YAAYyL,CAAK;AAC/B,MAAIC,IAAmB;AACvBzO,QAAM,WAAW,EAAEC,KAAKC,CAAAA,MAAOA,EAAIC,KAAI,CAAE,EAAEF,KAAKG,CAAAA,MAAQ;AACtD,UAAMsO,IAAY/P,SAASC,eAAe,WAAW;AAOrD+P,IAAAA,EAAe,CANE;AAAA,MACf1N,MAAM;AAAA,MACNe,MAAM;AAAA,MACNnC,MAAM;AAAA,MACNqB,UAAUd;AAAAA,KAEY,GAAGsO,CAAS;AAAA,EACtC,CAAC;AAGD,WAASC,EAAe5N,GAAOU,GAAQ;AACrC,UAAME,IAAKhD,SAASiD,cAAc,IAAI;AACtC,eAAWZ,KAAQD,GAAO;AACxB,UAAIC,EAAKC,SAAS,SAAU;AAC5B,YAAMY,IAAKlD,SAASiD,cAAc,IAAI,GAChCgN,IAAMjQ,SAASiD,cAAc,KAAK;AACxCgN,MAAAA,EAAI7M,cAAc,QAAQf,EAAKgB,MAC/B4M,EAAI7P,MAAM0O,SAAS,WACnBmB,EAAIrM,UAAU,MAAM;AAClBkM,QAAAA,IAAmBzN,EAAKnB,KAAKC,QAAQ,OAAO,GAAG,GAC/CnB,SAASyC,iBAAiB,gBAAgB,EAAEC,QAAQC,CAAAA,MAAMA,EAAGvC,MAAMmP,aAAa,QAAQ,GACxFU,EAAI7P,MAAMmP,aAAa;AAAA,MACzB,GACArM,EAAGkB,YAAY6L,CAAG,GACd5N,EAAKE,YACPyN,EAAe3N,EAAKE,UAAUW,CAAE,GAElCF,EAAGoB,YAAYlB,CAAE;AAAA,IACnB;AACAJ,IAAAA,EAAOsB,YAAYpB,CAAE;AAAA,EACvB;AAGAhD,WAASC,eAAe,SAAS,EAAE2D,UAAU,YAAY;AACvD,QAAIkM,MAAqB,MAAM;AAC7BnL,YAAM,kCAAkC;AACxC;AAAA,IACF;AACA,UAAMtB,IAAOuM,EAASzO,QAAQ,OAAO,GAAG,EAAEuE,MAAM,GAAG,EAAEC,OAC/CuK,IAAUJ,IAAmB,GAAGA,CAAgB,IAAIzM,CAAI,KAAKA;AAMnE,KALY,MAAMhC,MAAM,eAAe;AAAA,MACrCgH,QAAQ;AAAA,MACRC,SAAS;AAAA,QAAE,gBAAgB;AAAA;MAC3BC,MAAMhJ,KAAK4E,UAAU;AAAA,QAAEgM,SAASP;AAAAA,QAAUM,SAAAA;AAAAA,OAAS;AAAA,IACrD,CAAC,GACQrO,MAGHjC,MAAgBgQ,MAClBhQ,IAAcsQ,GACdzQ,aAAasB,QAAQ,eAAemP,CAAO,IAE7C9O,EAAS,KANTuD,MAAM,qBAAqB,GAQ7BkL,EAAMhN,OAAM;AAAA,EACd,GAEA7C,SAASC,eAAe,aAAa,EAAE2D,UAAU,MAAM;AACrDiM,IAAAA,EAAMhN,OAAM;AAAA,EACd;AACF;AAGA7C,SAASC,eAAe,MAAM,EAAE2D,UAAU,MAAM;AAC9C,QAAMwM,IAAapQ,SAAS+D,cAAc,8BAA8B;AACxE,MAAI,CAACqM,GAAY;AACfzL,UAAM,kCAAkC;AACxC;AAAA,EACF;AACA,QAAMzD,IAAOkP,EAAWjN,OAClBE,IAAOnC,EAAKwE,MAAM,GAAG,EAAEC,IAAG;AAChC,MAAIhG,EAAY0Q,SAAShN,CAAI,GAAG;AAC9BsB,UAAM,iCAAiCtB,CAAI,EAAE;AAC7C;AAAA,EACF;AACAsM,EAAAA,EAAiBzO,CAAI;AACvB;AAMElB,SAASC,eAAe,UAAU,EAAE2D,UAAU,YAAY;AACxD,QAAMP,IAAOiN,OAAO,qCAAqC;AACzD,MAAI,CAACjN,KAAQA,EAAKkN,KAAI,MAAO,GAAI;AACjC,QAAMC,IAAWnN,EAAKC,SAAS,KAAK,IAAID,IAAO,GAAGA,CAAI,OAChDnC,IAAOrB,IAAmB,GAAGA,CAAgB,IAAI2Q,CAAQ,KAAKA;AACpEnP,QAAM,eAAe;AAAA,IACnBgH,QAAQ;AAAA,IACRC,SAAS;AAAA,MAAE,gBAAgB;AAAA;IAC3BC,MAAMhJ,KAAK4E,UAAU;AAAA,MAAEjD,MAAAA;AAAAA,MAAMoB,MAAM;AAAA,KAAQ;AAAA,EAC7C,CAAC,EAAEhB,KAAK,MAAM;AACZF,IAAAA,EAAS,GACTqP,WAAW,MAAM1O,EAASd,EAAcC,CAAI,CAAC,GAAG,GAAG;AAAA,EACrD,CAAC;AACH;AAIAlB,SAASC,eAAe,YAAY,EAAE2D,UAAU,YAAY;AAC1D,QAAMP,IAAOiN,OAAO,yCAAyC;AAC7D,MAAI,CAACjN,EAAM;AAEX,QAAMnC,IAAOrB,IAAmB,GAAGA,CAAgB,IAAIwD,CAAI,KAAKA;AAChEhC,QAAM,eAAe;AAAA,IACnBgH,QAAQ;AAAA,IACRC,SAAS;AAAA,MAAE,gBAAgB;AAAA;IAC3BC,MAAMhJ,KAAK4E,UAAU;AAAA,MAAEjD,MAAAA;AAAAA,MAAMoB,MAAM;AAAA,KAAU;AAAA,GAC9C,EAAEhB,KAAK,MAAMF,GAAW;AAC3B;AAGApB,SAASC,eAAe,QAAQ,EAAE2D,UAAU,YAAY;AACtD,QAAMwM,IAAapQ,SAAS+D,cAAc,8BAA8B;AACxE,MAAI,CAACqM,GAAY;AACfzL,UAAM,oCAAoC;AAC1C;AAAA,EACF;AACA,QAAMzD,IAAOkP,EAAWjN,OAClBE,IAAOnC,EAAKwE,MAAM,GAAG,EAAEC,IAAG;AAChC,MAAIhG,EAAY0Q,SAAShN,CAAI,GAAG;AAC9BsB,UAAM,mCAAmCtB,CAAI,EAAE;AAC/C;AAAA,EACF;AACA,QAAMqN,IAAWN,EAAWxN,UAAU+N,SAAS,QAAQ,GACjDC,IAAcF,IAChB,+CAA+CxP,CAAI,4BACnD,6CAA6CA,CAAI;AACrD,MAAK2P,QAAQD,CAAW;AACxB,QAAI;AACF,YAAMrP,IAAM,MAAMF,MAAM,eAAe;AAAA,QACrCgH,QAAQ;AAAA,QACRC,SAAS;AAAA,UAAE,gBAAgB;AAAA;QAC3BC,MAAMhJ,KAAK4E,UAAU;AAAA,UAAEjD,MAAAA;AAAAA,SAAM;AAAA,MAC/B,CAAC;AACD,UAAI,CAACK,EAAIM,IAAI;AACX,cAAMiP,IAAQ,MAAMvP,EAAIiE,KAAI;AAC5Bb,cAAM,yBAAyBmM,CAAK,EAAE;AACtC;AAAA,MACF;AAEAtO,MAAAA,EAAiB;AACjB,UAAI5C,IAAcH,aAAaC,QAAQ,aAAa;AAEpD,UAAIE;AACF,YAAI8Q,KAAY9Q,EAAY4D,WAAWtC,IAAO,GAAG,GAAG;AAClDzB,uBAAa0C,WAAW,aAAa,GACrC1C,aAAa0C,WAAW,YAAY,GACpCvC,IAAc;AACd,gBAAMmR,IAAS/Q,SAASC,eAAe,MAAM;AAC7C,UAAI8Q,MAAQA,EAAOhO,YAAY;AAAA,QACjC,WAAW,CAAC2N,KAAY9Q,MAAgBsB,GAAM;AAC5CzB,uBAAa0C,WAAW,aAAa,GACrC1C,aAAa0C,WAAW,YAAY,GACpCvC,IAAc;AACd,gBAAMmR,IAAS/Q,SAASC,eAAe,MAAM;AAC7C,UAAI8Q,MAAQA,EAAOhO,YAAY;AAAA,QACjC;AAAA;AAEF3B,MAAAA,EAAS;AAAA,IACX,SAASqO,GAAK;AACZ9K,YAAM,yBAAyB8K,EAAIC,OAAO,EAAE;AAAA,IAC9C;AACF;AAGF1P,SAASC,eAAe,QAAQ,EAAE2D,UAAU,YAAY;AACtD,QAAMwM,IAAapQ,SAAS+D,cAAc,8BAA8B;AACxE,MAAI,CAACqM,GAAY;AACfzL,UAAM,oCAAoC;AAC1C;AAAA,EACF;AACA,QAAMzD,IAAOkP,EAAWjN,OAClBE,IAAOnC,EAAKwE,MAAM,GAAG,EAAEC,IAAG;AAChC,MAAIhG,EAAY0Q,SAAShN,CAAI,GAAG;AAC9BsB,UAAM,mCAAmCtB,CAAI,EAAE;AAC/C;AAAA,EACF;AACA,QAAM8M,IAAUjP,EAAKC,QAAQ,OAAO,GAAG,GACjC6P,IAAWb,EAAQzK,MAAM,GAAG,GAC5BuL,IAAUD,EAASrL,IAAG,GACtBuL,IAAUF,EAAS1C,KAAK,GAAG,GAG3B6C,IAAcF,EAAQ3N,SAAS,KAAK,IAAI2N,EAAQ9P,QAAQ,SAAS,EAAE,IAAI8P,GACvEG,IAAYd,OAAO,mBAAmBa,CAAW;AACvD,MAAI,CAACC,KAAaA,EAAUb,KAAI,MAAO,MAAMa,MAAcD,EAAa;AACxE,QAAME,IAAUJ,EAAQ3N,SAAS,KAAK,KAAK,CAAC8N,EAAU9N,SAAS,KAAK,IAChE,GAAG8N,CAAS,QAAQA,GAClBlB,IAAUgB,IAAU,GAAGA,CAAO,IAAIG,CAAO,KAAKA;AAMpD,MAAI,EALQ,MAAMhQ,MAAM,eAAe;AAAA,IACrCgH,QAAQ;AAAA,IACRC,SAAS;AAAA,MAAE,gBAAgB;AAAA;IAC3BC,MAAMhJ,KAAK4E,UAAU;AAAA,MAAEgM,SAAAA;AAAAA,MAASD,SAAAA;AAAAA,KAAS;AAAA,EAC3C,CAAC,GACQrO,IAAI;AACX8C,UAAM,eAAe;AACrB;AAAA,EACF;AACA,EAAI/E,MAAgBuQ,MAClBvQ,IAAcsQ,GACdzQ,aAAasB,QAAQ,eAAemP,CAAO,IAE7C9O,EAAS;AACX;AAGEA,EAAS;"}