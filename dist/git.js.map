{"version":3,"file":"git.js","sources":["../src/myst-git/git.html?html-proxy&index=1.js"],"sourcesContent":["\n      import MystEditorGit from \"./MystEditorGit.jsx\";\n\n      const usercolors = [\"#30bced\", \"#60c771\", \"#e6aa3a\", \"#cbb63e\", \"#ee6352\", \"#9ac2c9\", \"#8acb88\", \"#14b2c4\"];\n      const urlParams = new URLSearchParams(window.location.search);\n      const username = urlParams.get(\"username\") || Math.floor(Math.random() * 1000).toString();\n      const color = usercolors[Math.floor(Math.random() * usercolors.length)];\n      let exampleCustomRoles = [\n        {\n          target: \"say\",\n          transform: async (content) => username + \" says: '\" + content + \"'\",\n        },\n      ];\n\n      let exampleCustomDirectives = [\n        {\n          target: \"bold\",\n          transform: (_, data) => `<b style=\"white-space: pre-wrap;\">${data.body}</b>`,\n        },\n      ];\n\n      let exampleTransforms = [\n        {\n          // Other repo issue links\n          target: /[0-9a-z\\-]+\\/[0-9a-z\\-]+#\\d{1,10}/g,\n          transform: (match) => {\n            const [repo, issueId] = match.split(\"#\");\n            return `<a href=\"https://github.com/${repo}/issues/${issueId}\">${match}</a>`;\n          },\n        },\n        {\n          // Other repo PR links\n          target: /[0-9a-z\\-]+\\/[0-9a-z\\-]+\\!\\d+/g,\n          transform: (match) => {\n            const [repo, prid] = match.split(\"!\");\n            return `<a href=\"https://github.com/${repo}/pull/${prid}\">${match}</a>`;\n          },\n        },\n        {\n          // Same repo issue links\n          target: /(^|(?<=\\s))#\\d+/g,\n          transform: (match) => {\n            const issueId = match.slice(1);\n            return `<a href=\"https://github.com/antmicro/myst-editor/issues/${issueId}\">${match}</a>`;\n          },\n        },\n        {\n          // Same repo PR links\n          target: /(^|(?<=\\s))!\\d+/g,\n          transform: (match) => {\n            const prid = match.slice(1);\n            return `<a href=\"https://github.com/antmicro/myst-editor/pull/${prid}\">${match}</a>`;\n          },\n        },\n        {\n          // User links\n          target: /@[0-9a-z\\-]+/g,\n          transform: (match) => {\n            const user = match.slice(1);\n            return `\n                <a href='https://github.com/${user}'>\n                  ${user}\n                </a>`;\n          },\n        },\n        {\n          target: /\\|date\\|/g,\n          transform: (match) => new Promise((r) => r(new Date().toLocaleString(\"en-GB\", { timeZone: \"UTC\" }))),\n        },\n      ];\n\n      const collabEnabled = !(import.meta.env.VITE_COLLAB == \"OFF\") && urlParams.get(\"collab\") != \"false\";\n      const collabUrl = import.meta.env.VITE_WS_URL ?? urlParams.get(\"collab_server\");\n      const branches = [\"main\", \"dev\"];\n      const commits = [\n        { message: \"commit 2\", hash: \"aaa\" },\n        { message: \"commit 1\", hash: \"bbb\" },\n      ];\n      const files = [\"docs/source/file1.md\", \"docs/source/file2.md\", \"docs/source/index.md\"];\n      const text = {\n        [\"docs/source/index.md\"]: `# {{project}}\n\n\\`\\`\\`{toctree}\nfile2\nfile1\n\\`\\`\\`\n`,\n        [\"docs/source/file1.md\"]: `# Document 1\\nline1\\nline2\\n## Heading2_1\\nline3\\n## Heading2_2\\nline4`,\n        [\"docs/source/file2.md\"]: `# Document 2\\nline1\\nline2\\n## Heading2_1\\nline3\\n## Heading2_2\\nline4`,\n      };\n\n      MystEditorGit(\n        {\n          repo: urlParams.get(\"repo\") ?? `repos/myst`,\n          initialBranches: branches,\n          getBranches: (page) => (page == 1 ? branches : []),\n          searchBranches: (input) => branches.filter((b) => b.includes(input)),\n          getCommits: (_, page) => (page == 1 ? commits : []),\n          searchCommits: (input) => commits.filter((c) => c.message.includes(input)),\n          getFiles: () => files,\n          getText: async (_, __, f) => text[f] ?? \"\",\n          storeHistory: () => {},\n          commitChanges: (msg) => ({ hash: \"ccc\", webUrl: \"#\" }),\n          id: \"demo\",\n          title: \"[MyST Editor](https://github.com/antmicro/myst-editor/) demo\",\n          transforms: exampleTransforms,\n          collaboration: {\n            enabled: collabEnabled,\n            commentsEnabled: collabEnabled,\n            resolvingCommentsEnabled: collabEnabled,\n            wsUrl: collabUrl ?? \"#\",\n            username,\n            color,\n            mode: collabUrl ? \"websocket\" : \"local\",\n          },\n          customRoles: exampleCustomRoles,\n          customDirectives: exampleCustomDirectives,\n          syncScroll: true,\n          index: \"docs/source/index.md\",\n          docsRoot: \"docs/source\",\n        },\n        document.getElementById(\"myst\"),\n      );\n    "],"names":["usercolors","urlParams","URLSearchParams","window","location","search","username","get","Math","floor","random","toString","color","length","exampleCustomRoles","target","transform","content","exampleCustomDirectives","_","data","body","exampleTransforms","match","repo","issueId","split","prid","slice","user","Promise","r","Date","toLocaleString","timeZone","collabEnabled","collabUrl","branches","commits","message","hash","files","text","MystEditorGit","initialBranches","getBranches","page","searchBranches","input","filter","b","includes","getCommits","searchCommits","c","getFiles","getText","__","f","storeHistory","commitChanges","msg","webUrl","id","title","transforms","collaboration","enabled","commentsEnabled","resolvingCommentsEnabled","wsUrl","mode","customRoles","customDirectives","syncScroll","index","docsRoot","document","getElementById"],"mappings":"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"}