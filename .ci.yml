stages:
  - build
  - doc-deploy
  - ui-tests
  - deploy

build:
  stage: build
  image: node:20
  before_script:
    - npm ci
  script:
    - npm run lint
    - npm run build
  artifacts:
    paths:
      - dist

functional-tests:
  stage: ui-tests
  image: node:20
  dependencies: [build]
  before_script:
    - npm ci
  script:
    - ./tests/test-server.sh
    - npx playwright install --with-deps chromium
    - npm run test
  artifacts:
    when: always
    paths:
      - test-results/.last-run.json
      - playwright-report/index.html

build-docs:
  stage: build
  when: manual
  image: $CI_DOCS_DOCKER_IMAGE
  tags: ['ace-x86_64']
  before_script:
    - cd docs
    - pip3 install -r requirements.txt
  script:
    - cd docs
    - make html
    - cd ..
    - tar cf $CI_DOCS_ARCHIVE -C docs/build/html/ .
  artifacts:
    paths:
      - docs/build
      - $CI_DOCS_ARCHIVE

doc-deploy:
  stage: doc-deploy
  image: node:20
  tags: ["docs"]
  dependencies: [build]
  script:
    - sed -i -e 's/{}.VITE_COLLAB/"ON"/g' dist/index.js
    - sed -i -e 's/{}.VITE_WS_URL/"\/devsignal"/g' dist/index.js
    - tar cf $CI_DOCS_ARCHIVE -C dist/ .
  artifacts:
    paths:
      - docs.tar
  only:
    - merge_requests

deploy-docs:
  stage: deploy
  when: manual
  tags: ['docs']
  image: $CI_DOCS_DOCKER_IMAGE
  variables:
    GIT_STRATEGY: none
  dependencies:
    - build-docs
  script: echo 'Deploying docs'
  artifacts:
    paths:
      - $CI_DOCS_ARCHIVE
